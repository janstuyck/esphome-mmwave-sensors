substitutions:
  device_id: test-mmwave-mr60bha1
  device_name: Test mmWave MR60BHA1
  header_frame: headers/mrx_frame.h
  header_sensor: headers/mr60bha1.h

esphome:
  name: ${device_id}
  friendly_name: ${device_name}
  includes:
  - ${header_frame}
  - ${header_sensor}

logger:
  logs:
    sensor: INFO
  
uart:
  id: soft_uart2
  baud_rate:  115200
  rx_pin: ${uart_rx_pin}
  tx_pin: ${uart_tx_pin}

sensor:
  - platform: custom
    lambda: |-
      auto mr60bha1_sensor = new MR60BHA1(id(soft_uart2)); 
      App.register_component(mr60bha1_sensor);
      return { mr60bha1_sensor->presence_sensor, mr60bha1_sensor->motion_sensor, mr60bha1_sensor->distance_sensor, mr60bha1_sensor->x_sensor, mr60bha1_sensor->y_sensor, mr60bha1_sensor->z_sensor, mr60bha1_sensor->heartrate_sensor, mr60bha1_sensor->breathing_sensor, mr60bha1_sensor->breathing_info_sensor, mr60bha1_sensor->body_movement_sensor, mr60bha1_sensor->radar_oob_sensor };
    sensors:
      - id: presence_sensor
        name: "Presense Sensor"
        internal: true
        on_value:
          - binary_sensor.template.publish:
              id: presence_template
              state: !lambda return x > 0;
      - id: motion_sensor
        name: "Motion Sensor"
        internal: true
        on_value:
          - binary_sensor.template.publish:
              id: motion_template
              state: !lambda return x > 0;
      - id: distance_sensor
        name: "Distance"
        state_class: measurement   
      - id: x_sensor
        name: "Angle X"
        state_class: measurement 
      - id: y_sensor
        name: "Angle Y"
        state_class: measurement 
      - id: z_sensor
        name: "Angle Z"
        state_class: measurement 
      - id: heartrate_sensor
        name: "Heartrate"
        state_class: measurement   
      - id: breathing_sensor
        name: "Breathing Rate"
        state_class: measurement 
      - id: breathing_info_sensor
        name: "Breathing Info"
        state_class: measurement 
      - id: body_movement_sensor
        name: "Body Movement"
        state_class: measurement 
      - id: radar_oob_sensor
        name: "Radar Detection Out of Bound"
        state_class: measurement   

binary_sensor:
  - id: presence_template
    platform: template
    name: "Presence"
    device_class: occupancy
  - id: motion_template
    platform: template
    name: "Motion"
    device_class: motion

button:
  - platform: template
    name: "Module Reset"
    id: "reset"
    icon: mdi:power-cycle
    on_press:
      then:
        - uart.write: [ 0x53, 0x59, 0x01, 0x02, 0x00, 0x01, 0x0F, 0xBF, 0x54, 0x43 ]
  - platform: template
    name: "Presence Inquiry"
    id: "presence_inquiry"
    icon: mdi:power-cycle
    on_press:
      then:
        - uart.write: [ 0x53, 0x59, 0x80, 0x81, 0x00, 0x01, 0x0F, 0xBD, 0x54, 0x43 ]
  - platform: template
    name: "Radar Detection Out of Bound Inquiry"
    id: "radar_oob_inquiry"
    icon: mdi:power-cycle
    on_press:
      then:
        - uart.write: [ 0x53, 0x59, 0x07, 0x87, 0x00, 0x01, 0x0F, 0x4A, 0x54, 0x43 ]
  - platform: template
    name: "Realtime Mode"
    id: "realtime_mode"
    icon: mdi:power-cycle
    on_press:
      then:
        - uart.write: [ 0x53, 0x59, 0x84, 0x0F, 0x00, 0x01, 0x00, 0x40, 0x54, 0x43 ]
  - platform: template
    name: "Sleep Mode"
    id: "sleep_mode"
    icon: mdi:power-cycle
    on_press:
      then:
        - uart.write: [ 0x53, 0x59, 0x84, 0x0F, 0x00, 0x01, 0x01, 0x41, 0x54, 0x43 ]
        
